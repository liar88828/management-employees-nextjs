generator client {
  provider = "prisma-client-js"
  // output   = "data"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Users {
  id            String    @id @default(uuid())
  name          String
  phone         String
  address       String
  email         String    @unique
  password      String
  role          String
  otp           String?
  otpCount      Int       @default(0)
  otpRegenerate DateTime  @default(now())
  otpExpired    DateTime  @default(now())
  status        String    @default("OTP")
  Session       Sessions?
}

model Sessions {
  id        String   @id @default(uuid())
  usersId   String   @unique
  expiresAt DateTime
  role      String
  Users     Users    @relation(fields: [usersId], references: [id])
}

model Employees {
  id             String      @id @default(uuid()) // Primary key with auto-increment
  name           String
  email          String      @unique
  phone          String
  gender         String // Gender (e.g., "Male", "Female", "Other")
  dateOfBirth    DateTime
  hireDate       DateTime
  jobTitle       String // Employee's job position
  department     String // Department where the employee works
  salary         Int // Employee's salary
  managerId      Int? // Foreign key referencing the manager
  status         String      @default("Active") // Employment status
  address        String
  city           String // City where the employee lives
  postalCode     String // Postal/ZIP code
  employmentType String // Employment type (e.g., "Full-Time", "Part-Time")
  notes          String // Additional notes about the employee
  img            String
  //
  country        String
  education      String
  skills         Skills[] // Stored as an array of strings
  languages      Languages[] // Stored as an array of strings
  //
  photoKtp       String?
  photo3x4       String?
  photoIjasah    String?

  //
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Skills {
  id   Int    @id @default(autoincrement())
  text String

  Employees   Employees @relation(fields: [employeesId], references: [id])
  employeesId String
}

model Languages {
  id          Int       @id @default(autoincrement())
  text        String
  Employees   Employees @relation(fields: [employeesId], references: [id])
  employeesId String
}

model Testimonials {
  id     Int    @id @default(autoincrement())
  name   String
  desc   String
  social String
  jobs   String
}
